// Tab 6 Inventory Analytics - Complete Fix
// Generated by fix_tab6_issues.py


// Usage Analysis functions - Fixed Version
async function loadUsageAnalysis() {
    try {
        document.getElementById('usage-summary-loading').style.display = 'block';
        document.getElementById('usage-summary-content').style.display = 'none';
        
        const response = await fetch(withGlobalFilters('/api/inventory/usage_analysis'));
        const data = await response.json();
        
        if (response.ok && data.usage_analysis) {
            // Update summary metrics
            const summary = data.usage_analysis.summary;
            document.getElementById('usage-total-items').textContent = summary.total_items || '--';
            document.getElementById('usage-active-items').textContent = summary.active_items || '--';
            document.getElementById('usage-transactions').textContent = summary.total_transactions || '--';
            document.getElementById('usage-utilization-rate').textContent = `${summary.overall_utilization || 0}%`;
            
            // Display category patterns
            displayCategoryPatterns(data.usage_analysis.category_patterns);
            
            // Display top items
            displayTopPerformingItems(data.usage_analysis.top_performing_items);
            
            document.getElementById('usage-summary-content').style.display = 'block';
        } else {
            console.error('Error loading usage analysis:', data.error);
            document.getElementById('usage-patterns-list').innerHTML = 
                '<div class="alert alert-danger">Error loading usage analysis</div>';
        }
    } catch (error) {
        console.error('Error loading usage analysis:', error);
        document.getElementById('usage-patterns-list').innerHTML = 
            '<div class="alert alert-danger">Error loading usage analysis</div>';
    } finally {
        document.getElementById('usage-summary-loading').style.display = 'none';
        document.getElementById('usage-patterns-loading').style.display = 'none';
        document.getElementById('usage-patterns-content').style.display = 'block';
    }
}

function displayCategoryPatterns(patterns) {
    let html = '';
    if (patterns && patterns.length > 0) {
        html = '<table class="table table-sm table-hover">';
        html += '<thead><tr><th>Category</th><th>Utilization</th><th>Turnover</th><th>Score</th></tr></thead>';
        html += '<tbody>';
        patterns.forEach(pattern => {
            const utilizationClass = pattern.utilization_rate > 70 ? 'success' : 
                                    pattern.utilization_rate > 40 ? 'warning' : 'secondary';
            html += `
                <tr>
                    <td>
                        <strong>${pattern.category || 'Unknown'}</strong><br>
                        <small class="text-muted">${pattern.subcategory || ''}</small>
                    </td>
                    <td>
                        <span class="badge bg-${utilizationClass}">${pattern.utilization_rate}%</span>
                    </td>
                    <td>${pattern.turnover_rate.toFixed(1)}x</td>
                    <td>
                        <div class="progress" style="height: 20px;">
                            <div class="progress-bar" role="progressbar" style="width: ${pattern.activity_score}%">
                                ${pattern.activity_score}
                            </div>
                        </div>
                    </td>
                </tr>
            `;
        });
        html += '</tbody></table>';
    } else {
        html = '<p class="text-muted">No usage patterns found.</p>';
    }
    document.getElementById('usage-patterns-list').innerHTML = html;
}

function displayTopPerformingItems(items) {
    let html = '';
    if (items && items.length > 0) {
        html = '<table class="table table-sm">';
        html += '<thead><tr><th>Item</th><th>Usage</th><th>Daily Rate</th></tr></thead>';
        html += '<tbody>';
        items.forEach(item => {
            html += `
                <tr>
                    <td>
                        <small>${item.tag_id}</small><br>
                        <strong>${item.common_name || 'Unknown'}</strong>
                    </td>
                    <td>${item.usage_count}</td>
                    <td>${item.daily_usage_rate.toFixed(2)}</td>
                </tr>
            `;
        });
        html += '</tbody></table>';
    } else {
        html = '<p class="text-muted">No top performing items found.</p>';
    }
    const container = document.getElementById('top-items-list');
    if (container) {
        container.innerHTML = html;
        document.getElementById('top-items-loading').style.display = 'none';
        document.getElementById('top-items-content').style.display = 'block';
    }
}

// Resale Tracking functions
async function loadResaleTracking() {
    try {
        document.getElementById('resale-loading').style.display = 'block';
        document.getElementById('resale-content').style.display = 'none';
        
        const response = await fetch(withGlobalFilters('/api/inventory/resale_tracking?days=90'));
        const data = await response.json();
        
        if (response.ok && data.resale_tracking) {
            displayResaleSummary(data.resale_tracking.summary_by_category);
            displayResaleItems(data.resale_tracking.items);
            document.getElementById('resale-content').style.display = 'block';
        } else {
            document.getElementById('resale-content').innerHTML = 
                '<div class="alert alert-danger">Error loading resale data</div>';
            document.getElementById('resale-content').style.display = 'block';
        }
    } catch (error) {
        console.error('Error loading resale tracking:', error);
        document.getElementById('resale-content').innerHTML = 
            '<div class="alert alert-danger">Error loading resale tracking</div>';
        document.getElementById('resale-content').style.display = 'block';
    } finally {
        document.getElementById('resale-loading').style.display = 'none';
    }
}

function displayResaleSummary(summary) {
    let html = '';
    if (summary && summary.length > 0) {
        html = '<table class="table table-striped">';
        html += '<thead><tr><th>Subcategory</th><th>Total</th><th>Available</th><th>Sold</th><th>Sell Rate</th><th>Avg Age</th></tr></thead>';
        html += '<tbody>';
        summary.forEach(cat => {
            const sellRateClass = cat.sell_rate > 50 ? 'success' : 
                                 cat.sell_rate > 20 ? 'warning' : 'danger';
            html += `
                <tr>
                    <td><strong>${cat.subcategory}</strong></td>
                    <td>${cat.total_items}</td>
                    <td>${cat.available_items}</td>
                    <td>${cat.sold_items}</td>
                    <td><span class="badge bg-${sellRateClass}">${cat.sell_rate}%</span></td>
                    <td>${cat.avg_age_days} days</td>
                </tr>
            `;
        });
        html += '</tbody></table>';
    } else {
        html = '<p class="text-muted">No resale summary data available.</p>';
    }
    document.getElementById('resale-summary-table').innerHTML = html;
}

function displayResaleItems(items) {
    let html = '';
    if (items && items.length > 0) {
        html = '<table class="table table-sm">';
        html += '<thead><tr><th>Item</th><th>Status</th><th>Age</th><th>Activity</th></tr></thead>';
        html += '<tbody>';
        items.slice(0, 20).forEach(item => {
            const statusClass = item.status === 'Ready to Rent' ? 'success' : 
                               item.status === 'Sold' ? 'info' : 'secondary';
            html += `
                <tr>
                    <td>
                        <small class="text-muted">${item.tag_id}</small><br>
                        <strong>${item.common_name}</strong><br>
                        <small>${item.subcategory || ''}</small>
                    </td>
                    <td><span class="badge bg-${statusClass}">${item.status}</span></td>
                    <td>${item.age_days || '--'} days</td>
                    <td>
                        <small>Score: ${item.activity_score.toFixed(1)}</small><br>
                        <small>${item.transaction_count} transactions</small>
                    </td>
                </tr>
            `;
        });
        html += '</tbody></table>';
    } else {
        html = '<p class="text-muted">No resale items found.</p>';
    }
    document.getElementById('resale-items-table').innerHTML = html;
}



// Fixed tab switching for Tab 6
document.addEventListener('shown.bs.tab', function(event) {
    const targetTab = event.target.getAttribute('data-bs-target') || event.target.getAttribute('href');
    console.log('Tab 6 - Tab activated:', targetTab);
    
    switch(targetTab) {
        case '#usage-analysis':
            console.log('Loading usage analysis tab');
            loadUsageAnalysis();
            break;
        case '#resale-tracking':
            console.log('Loading resale tracking tab');
            loadResaleTracking();
            break;
        case '#health-alerts':
            console.log('Loading health alerts for tab activation');
            loadAllHealthAlerts();
            break;
        case '#stale-items':
            console.log('Loading stale items for tab activation');
            loadAllStaleItems();
            break;
        case '#usage-patterns':
            console.log('Loading usage patterns for tab activation');
            loadUsagePatterns();
            break;
        case '#data-discrepancies':
            console.log('Loading data discrepancies for tab activation');
            loadDataDiscrepancies();
            break;
    }
});


// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    console.log('Tab 6 fixes loaded - initializing...');
    
    // Load default tab content if on Tab 6
    const currentPath = window.location.pathname;
    if (currentPath.includes('/tab/6')) {
        // Check which tab is active and load its content
        const activeTab = document.querySelector('.nav-link.active');
        if (activeTab) {
            const target = activeTab.getAttribute('data-bs-target');
            if (target === '#usage-analysis') {
                loadUsageAnalysis();
            } else if (target === '#resale-tracking') {
                loadResaleTracking();
            }
        }
    }
});

console.log('Tab 6 fixes loaded successfully');
